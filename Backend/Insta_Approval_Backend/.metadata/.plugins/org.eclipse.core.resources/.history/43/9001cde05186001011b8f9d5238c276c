package com.example.insta_approval_backend.service;

import java.io.IOException;

import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.server.ResponseStatusException;

import com.example.insta_approval_backend.model.Document;
import com.example.insta_approval_backend.model.LoanApplication;
import com.example.insta_approval_backend.repositoriy.DocumentRepository;
import com.example.insta_approval_backend.repositoriy.LoanApplicationRepository;

@Service
public class DocumentService {

    private final DocumentRepository docRepo;
    private final LoanApplicationRepository loanRepo;

    public DocumentService(DocumentRepository docRepo, LoanApplicationRepository loanRepo) {
        this.docRepo = docRepo;
        this.loanRepo = loanRepo;
    }

    public Document uploadDocument(Long loanId, MultipartFile file) {
        LoanApplication loan = loanRepo.findById(loanId)
                .orElseThrow(() -> new ResponseStatusException(HttpStatus.NOT_FOUND, "Loan not found"));

        try {
            Document doc = Document.builder()
                    .loanApplication(loan)
                    .fileName(file.getOriginalFilename())
                    .fileType(file.getContentType())
                    .data(file.getBytes())
                    .build();
            return docRepo.save(doc);
        } catch (IOException e) {
            throw new ResponseStatusException(HttpStatus.INTERNAL_SERVER_ERROR, "Failed to upload document");
        }
    }

    public Document getDocument(Long docId) {
        return docRepo.findById(docId)
                .orElseThrow(() -> new ResponseStatusException(HttpStatus.NOT_FOUND, "Document not found"));
    }

    public void deleteDocument(Long docId) {
        if (!docRepo.existsById(docId)) {
            throw new ResponseStatusException(HttpStatus.NOT_FOUND, "Document not found");
        }
        docRepo.deleteById(docId);
    }
}